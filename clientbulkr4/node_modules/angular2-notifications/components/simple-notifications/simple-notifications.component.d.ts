import { EventEmitter, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { Options, Animate, Position } from '../../interfaces/options.type';
import { Notification } from '../../interfaces/notification.type';
import { NotificationsService } from '../../services/notifications.service';
export declare class SimpleNotificationsComponent implements OnInit, OnDestroy {
    private service;
    private cdr;
    constructor(service: NotificationsService, cdr: ChangeDetectorRef);
    options: Options;
    onCreate: EventEmitter<{}>;
    onDestroy: EventEmitter<{}>;
    notifications: Notification[];
    position: Position;
    private lastNotificationCreated;
    private listener;
    private lastOnBottom;
    private maxStack;
    private preventLastDuplicates;
    private preventDuplicates;
    timeOut: number;
    maxLength: number;
    clickToClose: boolean;
    clickIconToClose: boolean;
    showProgressBar: boolean;
    pauseOnHover: boolean;
    theClass: string;
    rtl: boolean;
    animate: Animate;
    private _usingComponentOptions;
    ngOnInit(): void;
    ngOnDestroy(): void;
    defaultBehavior(value: any): void;
    add(item: Notification): void;
    block(item: Notification): boolean;
    checkStandard(checker: Notification, item: Notification): boolean;
    checkHtml(checker: Notification, item: Notification): boolean;
    attachChanges(options: any): void;
    buildEmit(notification: Notification, to: boolean): Notification;
    cleanSingle(id: string): void;
}
